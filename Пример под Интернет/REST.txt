								REST:
REST (Representational State Transfer) — это способ создания API с помощью протокола HTTP. На русском его называют «передачей состояния представления». Технологию REST API применяют везде, где пользователю сайта или веб-приложения нужно предоставить данные с сервера.

REST (Representational State Transfer) — это подход к созданию веб-сервисов, который определяет, как клиент и сервер должны взаимодействовать друг с другом через интернет. Чтобы было понятнее, представь, что REST — это набор правил, которые упрощают передачу данных между клиентом (например, браузером или мобильным приложением) и сервером.

Ключевые понятия:
Ресурсы — это данные, которые можно получить или изменить через интернет. Примеры ресурсов: пользователи, товары, статьи. В REST каждый ресурс представлен уникальным URL (адресом).

Пример: https://example.com/users — это список всех пользователей.
HTTP-методы — REST использует стандартные методы HTTP (протокола, который используется для обмена данными в интернете) для работы с ресурсами:

GET — чтобы получить данные (например, получить информацию о пользователе).
POST — чтобы отправить новые данные на сервер (например, создать нового пользователя).
PUT — чтобы обновить существующие данные (например, изменить данные пользователя).
DELETE — чтобы удалить данные (например, удалить пользователя).
Статус ответа — сервер всегда возвращает статус ответа, который показывает результат выполнения запроса:

200 OK — запрос выполнен успешно.
404 Not Found — ресурс не найден.
500 Internal Server Error — ошибка на сервере.
Пример работы REST:
Допустим, у тебя есть приложение для управления списком задач. Вот как это может работать с REST:

GET /tasks — получить список всех задач.
POST /tasks — добавить новую задачу (например, "Купить молоко").
PUT /tasks/1 — обновить задачу с ID 1 (например, изменить текст на "Купить хлеб").
DELETE /tasks/1 — удалить задачу с ID 1.
Главное, что нужно запомнить:
REST — это стандартный способ работы с данными через интернет.
REST работает с ресурсами через их уникальные URL.
Для каждого действия (создание, чтение, обновление, удаление) используются стандартные HTTP-методы (GET, POST, PUT, DELETE).
